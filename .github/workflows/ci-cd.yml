name: CI/CD Pipeline

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up Python 3.11
        uses: actions/setup-python@v5 
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH # Adiciona Poetry ao PATH
          poetry config virtualenvs.in-project true # Configura para criar venv no projeto

      - name: Install dependencies with Poetry
        run: poetry install --with dev

      - name: Create .env.test for CI Environment
        run: |
          echo "DATABASE_URL=sqlite:///./test.db" > .env.test
          echo "SECRET_KEY=${{ secrets.TEST_SECRET_KEY }}" >> .env.test # Usando GitHub Secret para segurança
          echo "OLLAMA_BASE_URL=http://ollama:11434" >> .env.test
          echo "TESTING=True" >> .env.test
        env:
          TEST_SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }} 

      - name: Run tests
        run: poetry run pytest -s 

  deploy:
    needs: test 
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_IMAGE_NAME: seu-usuario-docker/ia-recommendation 
        run: |
          IMAGE_TAG=${{ github.sha }} # Usa o SHA do commit como tag da imagem
          
          echo "Building Docker image: $DOCKER_IMAGE_NAME:$IMAGE_TAG"
          # Assumimos que você tem um Dockerfile para sua aplicação FastAPI na raiz do projeto
          docker build -t $DOCKER_IMAGE_NAME:$IMAGE_TAG -t $DOCKER_IMAGE_NAME:latest .
          
          echo "Pushing Docker image: $DOCKER_IMAGE_NAME:$IMAGE_TAG and $DOCKER_IMAGE_NAME:latest"
          docker push $DOCKER_IMAGE_NAME:$IMAGE_TAG
          docker push $DOCKER_IMAGE_NAME:latest